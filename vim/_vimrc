""""""" PATHOGEN begin
execute pathogen#infect()
syntax enable
filetype plugin indent on
call pathogen#helptags()
""""""" PATHOGEN end

"""" AIRLINE begin
" always show status bar
set laststatus=2
" unicode symbols
if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif
let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = ''
let g:airline_symbols.maxlinenr = ''
let g:airline_symbols.dirty='⚡'
" airline colorscheme/theme
let g:airline_theme='gruvbox'
let g:airline_powerline_fonts = 1
" airline tabline
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#buffer_idx_mode = 1
" keybindings
nmap <leader>1 <Plug>AirlineSelectTab1
nmap <leader>2 <Plug>AirlineSelectTab2
nmap <leader>3 <Plug>AirlineSelectTab3
nmap <leader>4 <Plug>AirlineSelectTab4
nmap <leader>5 <Plug>AirlineSelectTab5
nmap <leader>6 <Plug>AirlineSelectTab6
nmap <leader>7 <Plug>AirlineSelectTab7
nmap <leader>8 <Plug>AirlineSelectTab8
nmap <leader>9 <Plug>AirlineSelectTab9
nmap <leader>- <Plug>AirlineSelectPrevTab
nmap <leader>+ <Plug>AirlineSelectNextTab
"""" AIRLINE end

"""" ULTISNIPS begin
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<tab>"
let g:UltiSnipsJumpBackwardTrigger="<S-tab>"
let g:UltiSnipsSnippetDirectories=[$HOME.'/.vim/bundle/my-ulti-snippets']
let g:UltiSnipsSnippetsDir=$HOME.'/.vim/bundle/my-ulti-snippets'
"""" ULTISNIPS end

"""" YOUCOMPLETEME begin
" no keystealing from Ultisnips, removed TAB and S-TAB
let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']
let g:ycm_key_list_select_completion = ['<C-n>', '<Down>']
let g:ycm_autoclose_preview_window_after_completion = 1
"""" YOUCOMPLETEME end

"""" RANGER begin
let g:ranger_map_keys = 0
map <leader>a :Ranger<CR>
map <leader>A :RangerWorkingDirectory<CR>
"""" RANGER end

"""" SNEAK begin
"replace 'f' with 1-char Sneak
nmap f <Plug>Sneak_f
nmap F <Plug>Sneak_F
xmap f <Plug>Sneak_f
xmap F <Plug>Sneak_F
omap f <Plug>Sneak_f
omap F <Plug>Sneak_F
"replace 't' with 1-char Sneak
nmap t <Plug>Sneak_t
nmap T <Plug>Sneak_T
xmap t <Plug>Sneak_t
xmap T <Plug>Sneak_T
omap t <Plug>Sneak_t
omap T <Plug>Sneak_T
"""" SNEAK end

"""" DISPLAY SETTINGS begin
set showcmd "show vim commands as they're typed
set number "show line number
set relativenumber "show relative line numbering
set hlsearch " set hlsearch
" set 256 colors available
set t_Co=256
" non-printable character display settings when :set list
set lcs=space:·,tab:»»,eol:↵
hi NonText ctermfg=0 guifg=gray
hi SpecialKey ctermfg=0 guifg=gray
" let lines wrap at the indentation of beginning of the line being wrapped
set breakindent
" colors
set background=dark
colorscheme gruvbox
hi Normal ctermbg=NONE
"""" DISPLAY SETTINGS end

"""" AUTOPAIRS begin
let g:AutoPairsMultilineClose = 0
"""" AUTOPAIRS end

"""" TABULAR begin
nnoremap <bar> :Tab/
"""" TABULAR end

"""" TABLINE begin
set showtabline=1
nnoremap <leader>x :bd<CR>
"""" TABLINE end

"""" FZF begin
set rtp+=~/installed_software/fzf
" open new file
nmap <leader>f :Files<space>
" find file by contents
nmap <leader>F :Ag<space>
"""" FZF end

"""" POLYGLOT begin
let g:csv_no_conceal = 1
"""" POLYGLOT end

""""""" plugin-related settings begin
" let vim detect filetype. needed for some plugins
filetype plugin on
" latex filetype setting
let g:tex_flavor = "latex"
""""""" plugin-related settings end

""""""" search settings begin
" this mapping causes vim to startup with c pressed
nnoremap <esc> <esc>:noh<cr>:<bs><esc>hl
" but neovim doesn't have this issue
""""""" search settings end

""""""" clipboard settings begin
" set <C-c> to paste-to-clipboard in insert mode
inoremap <C-c> <esc>"+pa
" set <C-c> to copy-to-clipboard in visual mode
vnoremap <C-c> "+y
" ensure that clipboard = the unnamed register
set clipboard=unnamed
""""""" clipboard settings end

""""""" terminal emulator settings begin
" let C-w work as it normall does even in terminal mode
tnoremap <C-w> <C-\><C-n><C-w>
tnoremap <Esc><Esc> <C-\><C-n>
""""""" terminal emulator settings end

" <C-m> is 'm'y namespace
noremap <C-m>hls :set hlsearch!<CR>
noremap <C-m>rn :set relativenumber!<CR>
noremap <C-m>ln :set number!<CR>
noremap <C-m>lcs :set list!<CR>
nmap <C-m>sn :if exists("g:syntax_on") <Bar> syntax off <Bar> else <Bar> syntax enable <Bar> endif <CR>
nmap <C-m>rr :bufdo e<CR>

" tab settings
set tabstop=4     "The width of a TAB is set to 4, but is still \lt
set shiftwidth=4  "Indents will have a width of 4
set softtabstop=4 "Sets the number of columns for a TAB
set expandtab     "Expand TABs to spaces
" except you can still manually TAB like this:
inoremap <S-Tab> <C-v><Tab>

" :split opens to the right or below
set splitright
set splitbelow

" let % jump to closing tag in html on top of usual functionality
runtime macros/matchit.vim

" code folding settings
set foldmethod=indent
set nofoldenable

""""""" MY FUNCTIONS BEGIN
" remove trailing whitespace + tabs to spaces
noremap <C-m>w :call RemoveTrailingWhitespace()<CR>:call TabsToSpaces()<CR>

function RemoveTrailingWhitespace()
    :exe "silent! :%s/\\s\\+\\n/\\r/"
endfunction

function TabsToSpaces()
    :exe "silent! :%s/\\t/    /g"
endfunction
""""""" MY FUNCTIONS END

""""""" MY VARIABLES BEGIN
let g:no_ocaml_maps=1
let g:csv_delim=','
""""""" MY VARIABLES END
